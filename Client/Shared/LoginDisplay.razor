@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IAccessTokenProvider TokenProvider
@inject HttpClient Http

<AuthorizeView>
    <Authorized>
        <NavLink>
            <span class="text-light">
                Hello, @context.User.Identity.Name!
            </span> 
            <a class="text-light" @onclick="BeginSignOut">Log out</a>
        </NavLink>
    </Authorized>
    <NotAuthorized>
        <NavLink class="text-light" href="authentication/login">
            <span class="oi oi-account-login" aria-hidden="true"></span> Log in
        </NavLink>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        var tokenResult = await TokenProvider.RequestAccessToken();

        if (tokenResult.TryGetToken(out var token))
        {
            var result = await Http.PostAsync($"https://oauth2.googleapis.com/revoke?token={token.Value}", null);
        }

        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}